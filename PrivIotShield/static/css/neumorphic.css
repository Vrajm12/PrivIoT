/* Neumorphic Elements - Modern UI Update */

:root {
  /* Neumorphism Variables */
  --neumorph-bg: var(--bg-secondary);
  --neumorph-shadow-light: rgba(255, 255, 255, 0.05);
  --neumorph-shadow-dark: rgba(0, 0, 0, 0.1);
  --neumorph-radius: 12px;
  --neumorph-depth: 6px;
}

[data-theme="light"] {
  --neumorph-bg: var(--bg-secondary);
  --neumorph-shadow-light: rgba(255, 255, 255, 0.7);
  --neumorph-shadow-dark: rgba(0, 0, 0, 0.07);
}

/* Neumorphic Card - Raised Effect */
.card.neumorph-card {
  background: var(--neumorph-bg);
  border-radius: var(--neumorph-radius);
  box-shadow: 
    var(--neumorph-depth) var(--neumorph-depth) calc(var(--neumorph-depth) * 2) var(--neumorph-shadow-dark),
    calc(var(--neumorph-depth) * -1) calc(var(--neumorph-depth) * -1) calc(var(--neumorph-depth) * 2) var(--neumorph-shadow-light);
  border: none;
  transition: all 0.3s ease;
}

.card.neumorph-card:hover {
  box-shadow: 
    calc(var(--neumorph-depth) * 1.2) calc(var(--neumorph-depth) * 1.2) calc(var(--neumorph-depth) * 2.4) var(--neumorph-shadow-dark),
    calc(var(--neumorph-depth) * -1.2) calc(var(--neumorph-depth) * -1.2) calc(var(--neumorph-depth) * 2.4) var(--neumorph-shadow-light);
  transform: translateY(-5px);
}

/* Neumorphic Card - Inset Effect */
.card.neumorph-inset {
  background: var(--neumorph-bg);
  border-radius: var(--neumorph-radius);
  box-shadow: 
    inset var(--neumorph-depth) var(--neumorph-depth) calc(var(--neumorph-depth) * 2) var(--neumorph-shadow-dark),
    inset calc(var(--neumorph-depth) * -1) calc(var(--neumorph-depth) * -1) calc(var(--neumorph-depth) * 2) var(--neumorph-shadow-light);
  border: none;
  padding: calc(var(--neumorph-depth) + 10px);
}

/* Neumorphic Button */
.btn.neumorph-btn {
  background: var(--neumorph-bg);
  border-radius: 8px;
  box-shadow: 
    4px 4px 8px var(--neumorph-shadow-dark),
    -4px -4px 8px var(--neumorph-shadow-light);
  border: none;
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.btn.neumorph-btn:active {
  box-shadow: 
    inset 4px 4px 8px var(--neumorph-shadow-dark),
    inset -4px -4px 8px var(--neumorph-shadow-light);
}

.btn.neumorph-btn:hover {
  transform: translateY(-2px);
}

.btn.neumorph-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  transition: all 0.6s ease;
}

.btn.neumorph-btn:hover::before {
  left: 100%;
}

/* Neumorphic Input */
.form-control.neumorph-input {
  background: var(--neumorph-bg);
  border-radius: 8px;
  box-shadow: 
    inset 3px 3px 6px var(--neumorph-shadow-dark),
    inset -3px -3px 6px var(--neumorph-shadow-light);
  border: none;
  padding: 1rem 1.2rem;
  transition: all 0.2s ease;
}

.form-control.neumorph-input:focus {
  box-shadow: 
    inset 4px 4px 8px var(--neumorph-shadow-dark),
    inset -4px -4px 8px var(--neumorph-shadow-light);
}

/* Neumorphic Toggle */
.neumorph-toggle {
  position: relative;
  width: 60px;
  height: 30px;
  background: var(--neumorph-bg);
  border-radius: 15px;
  box-shadow: 
    inset 3px 3px 6px var(--neumorph-shadow-dark),
    inset -3px -3px 6px var(--neumorph-shadow-light);
  cursor: pointer;
}

.neumorph-toggle .toggle-handle {
  position: absolute;
  top: 3px;
  left: 3px;
  width: 24px;
  height: 24px;
  background: var(--bg-primary);
  border-radius: 50%;
  box-shadow: 
    3px 3px 6px var(--neumorph-shadow-dark),
    -3px -3px 6px var(--neumorph-shadow-light);
  transition: all 0.3s ease;
}

.neumorph-toggle.active .toggle-handle {
  left: 33px;
  background: var(--primary-color);
}

/* Neumorphic Progress Bar */
.neumorph-progress {
  height: 12px;
  background: var(--neumorph-bg);
  border-radius: 6px;
  box-shadow: 
    inset 2px 2px 4px var(--neumorph-shadow-dark),
    inset -2px -2px 4px var(--neumorph-shadow-light);
  overflow: hidden;
  margin: 1rem 0;
}

.neumorph-progress-bar {
  height: 100%;
  border-radius: 6px;
  background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
  box-shadow: 
    2px 0 4px var(--neumorph-shadow-dark);
  transition: width 0.5s ease;
}

/* Neumorphic Icon Button */
.neumorph-icon-btn {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background: var(--neumorph-bg);
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 
    5px 5px 10px var(--neumorph-shadow-dark),
    -5px -5px 10px var(--neumorph-shadow-light);
  cursor: pointer;
  transition: all 0.3s ease;
  border: none;
  color: var(--text-color);
}

.neumorph-icon-btn:active {
  box-shadow: 
    inset 3px 3px 6px var(--neumorph-shadow-dark),
    inset -3px -3px 6px var(--neumorph-shadow-light);
}

.neumorph-icon-btn:hover {
  transform: translateY(-2px);
  color: var(--primary-color);
}

/* Circular Progress */
.neumorph-circular-progress {
  position: relative;
  width: 120px;
  height: 120px;
  border-radius: 50%;
  background: var(--neumorph-bg);
  box-shadow: 
    6px 6px 12px var(--neumorph-shadow-dark),
    -6px -6px 12px var(--neumorph-shadow-light);
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto;
}

.neumorph-circular-progress .inner {
  position: absolute;
  width: 80%;
  height: 80%;
  border-radius: 50%;
  background: var(--neumorph-bg);
  z-index: 2;
  box-shadow: 
    inset 4px 4px 8px var(--neumorph-shadow-dark),
    inset -4px -4px 8px var(--neumorph-shadow-light);
  display: flex;
  align-items: center;
  justify-content: center;
}

.neumorph-circular-progress .value {
  font-size: 1.8rem;
  font-weight: 700;
  color: var(--text-color);
}

.neumorph-circular-progress svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: rotate(-90deg);
}

.neumorph-circular-progress svg circle {
  width: 100%;
  height: 100%;
  fill: none;
  stroke-width: 10;
  stroke-linecap: round;
  transform: translate(5px, 5px);
}

.neumorph-circular-progress svg circle.background {
  stroke: var(--neumorph-shadow-dark);
  opacity: 0.2;
}

.neumorph-circular-progress svg circle.progress {
  stroke: url(#gradient);
  stroke-dasharray: 330;
  stroke-dashoffset: calc(330 - (330 * var(--percent)) / 100);
  transition: stroke-dashoffset 1s ease;
}

/* Floating Action Button */
.fab {
  position: fixed;
  bottom: 30px;
  right: 30px;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  cursor: pointer;
  transition: all 0.3s ease;
  z-index: 9999;
}

.fab:hover {
  transform: scale(1.1);
  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.3);
}

.fab i {
  font-size: 1.5rem;
}

/* Glass Morphism Card */
.glass-morphism {
  background: rgba(var(--card-bg-rgb), 0.25);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

/* Gradient Border Card */
.gradient-border-card {
  position: relative;
  padding: 1px;
  background: linear-gradient(135deg, var(--primary-color), var(--tertiary-color));
  border-radius: var(--border-radius);
}

.gradient-border-card-inner {
  background: var(--card-bg);
  border-radius: calc(var(--border-radius) - 1px);
  padding: 1.5rem;
  height: 100%;
}

/* 3D Card Effect */
.card-3d {
  transform-style: preserve-3d;
  transition: all 0.5s ease;
}

.card-3d:hover {
  transform: rotateX(5deg) rotateY(5deg);
}

.card-3d .card-body {
  transform: translateZ(20px);
  transition: all 0.5s ease;
}

/* Dashboard Quick Actions */
.quick-actions {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin-bottom: 1.5rem;
}

.quick-action-btn {
  flex: 1;
  min-width: 120px;
  padding: 1rem;
  border-radius: 10px;
  text-align: center;
  background: var(--card-bg);
  box-shadow: var(--shadow-sm);
  transition: all 0.3s ease;
  cursor: pointer;
}

.quick-action-btn:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-md);
}

.quick-action-icon {
  font-size: 1.8rem;
  margin-bottom: 0.5rem;
  color: var(--primary-color);
}

.quick-action-text {
  font-size: 0.9rem;
  font-weight: 500;
}

/* App loading indicator */
.app-loading {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--bg-primary);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  transition: opacity 0.3s ease;
}

.loading-spinner {
  width: 50px;
  height: 50px;
  border: 3px solid rgba(var(--primary-color-rgb), 0.3);
  border-top-color: var(--primary-color);
  border-radius: 50%;
  animation: spin 1s infinite linear;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
